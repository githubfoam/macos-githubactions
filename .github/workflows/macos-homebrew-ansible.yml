
name: "macos homebrew ansible CI workflow"

on:
  push:
    branches: [ test ]
  # schedule:
  #     - cron:  '0 0 * * 0' #At 00:00 on Sunday every week



jobs:

  macos-latest-homebrew-ansible:
      name: "homebrew ansible - macos-latest 10.15.7"
      runs-on: macos-latest
      steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: "brew update"
        run: brew update     
      - name: "check on brew version"
        run: brew --version 
      - name: "Installing and upgrading Ansible with homebrew"
        run: |
          python -V
          python3 -V
          pip --version
          brew install ansible
          ansible --version 

  macos-latest-homebrew-ansible-playbook:
      name: "ansible playbook  - macos-latest 10.15.7"
      runs-on: macos-latest
      steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: "brew update"
        run: brew update     
      - name: "check on brew version"
        run: brew --version 
      - name: "Installing and upgrading Ansible with homebrew"
        run: |
          python -V
          python3 -V
          pip --version
          brew install ansible
          ansible --version 
          ansible-playbook playbooks/local.yml --check
      - name: "Run playbook locally"
        run: ansible-playbook playbooks/local.yml --check
      - name: "Run playbook ruby role locally"
        run: |
          ansible-playbook --list-tags playbooks/localhost_macos.yml
          ansible-playbook --syntax-check playbooks/localhost_macos.yml
          ansible-playbook --list-hosts playbooks/localhost_macos.yml
          ansible-playbook playbooks/localhost_macos.yml --tags "ruby" --check 
          # ansible-playbook playbooks/localhost_macos.yml --tags "ruby-deploy"
          # ansible-playbook playbooks/localhost_macos.yml --tags "ruby-gem-deploy"       

  # macos-110:
  #     name: "macos-11.0"
  #     runs-on: macos-11.0 # ProductVersion 11.0.1
  #     steps:
  #     - name: Checkout
  #       uses: actions/checkout@v1
  #     - name: "brew update"
  #       run: brew update    
  #     - name: "install osquery"
  #       run: |
  #           chmod +x scripts/install_osquery.sh
  #           sh scripts/install_osquery.sh 
  #     - name: "DFIR osquery list"
  #       run: |
  #           chmod +x scripts/dfir_osquery.sh
  #           sh scripts/dfir_osquery.sh          
  #     - name: "check on brew version"
  #       run: brew --version   #Homebrew 2.5.12   
  #     - name: "brew cask list"
  #       run:   brew list --cask #Warning: Calling brew cask list is deprecated! Use brew list [--cask] instead.
  #     - name: "brew list --formula"
  #       run: brew list --formula #List all the installed formulas
  #     - name: "Get OS X System Version"
  #       run: sw_vers       
  #     - name: "Get Mac System Details with system_profiler"
  #       run: system_profiler | more  
  #     - name: "osfingerprinting"
  #       run: uname -a                           


  # macos-1015:
  #     name: "macos-10.15"
  #     runs-on: macos-10.15 # ProductVersion 10.15.7
  #     steps:
  #     - name: Checkout
  #       uses: actions/checkout@v1
  #     - name: "brew update"
  #       run: brew update     
  #     - name: "install osquery"
  #       run: |
  #           chmod +x scripts/install_osquery.sh
  #           sh scripts/install_osquery.sh 
  #     - name: "DFIR osquery list"
  #       run: |
  #           chmod +x scripts/dfir_osquery.sh
  #           sh scripts/dfir_osquery.sh         
  #     - name: "check on brew version"
  #       run: brew --version   #Homebrew 2.5.12   
  #     - name: "brew cask list"
  #       run:   brew list --cask #Warning: Calling brew cask list is deprecated! Use brew list [--cask] instead.
  #     - name: "brew list --formula"
  #       run: brew list --formula #List all the installed formulas
  #     - name: "Get OS X System Version"
  #       run: sw_vers       
  #     - name: "Get Mac System Details with system_profiler"
  #       run: system_profiler | more  
  #     - name: "osfingerprinting"
  #       run: uname -a                           
